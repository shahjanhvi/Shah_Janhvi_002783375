/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.event.KeyEvent;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;
import model.BookAppointment;
import model.BookAppointmentDirectory;
import model.City;
import model.CityDirectory;
import model.Community;
import model.CommunityDirectory;
import model.Doctor;
import model.DoctorDirectory;
import model.Encounter;
import model.EncounterHistory;
import model.Hospital;
import model.HospitalDirectory;
import model.Patient;
import model.PatientDirectory;

/**
 *
 * @author Janhvi Shah
 */
public class MainPatientJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MainPatientJPanel
     */
    JSplitPane splitPanel;
    Patient p;
    PatientDirectory directory;
    CityDirectory cityDirectory;
    CommunityDirectory communityDirectory;
    HospitalDirectory hospitalDirectory;
    EncounterHistory encounterHistory;
    BookAppointmentDirectory bookAppointmentDirectory;
  
    
    public MainPatientJPanel(JSplitPane splitPanel, PatientDirectory directory, 
            Patient p, CityDirectory cityDirectory, CommunityDirectory communityDirectory, HospitalDirectory hospitalDirectory,
           EncounterHistory encounterHistory, BookAppointmentDirectory bookAppointmentDirectory) {
        initComponents();
        this.splitPanel = splitPanel;
        this.directory = directory;
        this.p = p;
        this.cityDirectory = cityDirectory;
        this.communityDirectory = communityDirectory;
        this.hospitalDirectory = hospitalDirectory;
        this.encounterHistory = encounterHistory;
        this.bookAppointmentDirectory = bookAppointmentDirectory;
        
        txtFirstName.setVisible(false);
        txtLastName.setVisible(false);
        txtUsername.setVisible(false);
//        txtPassword.setVisible(false);
        txtAge.setVisible(false);
        txtGender.setVisible(false);
        txtMobileNo.setVisible(false);
        txtCommunity.setVisible(false);
        txtCity.setVisible(false);
        
        lblCommunity.setVisible(false);
        lblCity.setVisible(false);
        lblFirstName.setVisible(false);
        lblLastName.setVisible(false);
        lblUsername.setVisible(false);
//        lblPassword.setVisible(false);
        lblAge.setVisible(false);
        lblGender.setVisible(false);
        lblMobileNo.setVisible(false);
        
        for(City c: cityDirectory.getCityDirectory()){
           System.out.println( c.getCity());
            dropDownCity.addItem(c.getCity());
            
        }
        
        populateTableEncounter();
        populateTableAppointment();
              
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnLogOut = new javax.swing.JButton();
        btnBookAppointment = new javax.swing.JButton();
        btnViewData = new javax.swing.JButton();
        btnUpdateData = new javax.swing.JButton();
        txtAge = new javax.swing.JTextField();
        lblFirstName = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtFirstName = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        lblMobileNo = new javax.swing.JLabel();
        txtMobileNo = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtGender = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        txtCommunity = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dropDownCity = new javax.swing.JComboBox<>();
        dropDownCommunity = new javax.swing.JComboBox<>();
        dropDownHospital = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dropDownDoctor = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEncounterHistory = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAppointment = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        dateChooser = new com.toedter.calendar.JDateChooser();
        createEmployeeLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 204, 204));

        btnLogOut.setBackground(new java.awt.Color(192, 192, 192));
        btnLogOut.setText("Log Out");
        btnLogOut.setBorder(null);
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        btnBookAppointment.setBackground(new java.awt.Color(192, 192, 192));
        btnBookAppointment.setText("Book New Appointment");
        btnBookAppointment.setBorder(null);
        btnBookAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookAppointmentActionPerformed(evt);
            }
        });

        btnViewData.setBackground(new java.awt.Color(192, 192, 192));
        btnViewData.setText("View Data");
        btnViewData.setBorder(null);
        btnViewData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDataActionPerformed(evt);
            }
        });

        btnUpdateData.setBackground(new java.awt.Color(192, 192, 192));
        btnUpdateData.setText("Update Data");
        btnUpdateData.setBorder(null);
        btnUpdateData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateDataActionPerformed(evt);
            }
        });

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        lblFirstName.setText("First Name:");

        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        txtFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstNameActionPerformed(evt);
            }
        });

        lblAge.setText("Age:");

        lblLastName.setText("Last Name:");

        lblMobileNo.setText("Mobile No:");

        txtMobileNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMobileNoActionPerformed(evt);
            }
        });
        txtMobileNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMobileNoKeyPressed(evt);
            }
        });

        txtLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastNameActionPerformed(evt);
            }
        });

        txtGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGenderActionPerformed(evt);
            }
        });

        lblGender.setText("Gender:");

        lblUsername.setText("Username:");

        lblCommunity.setText("Community:");

        lblCity.setText("City:");

        jLabel2.setText("Date:");

        jLabel3.setText("Choose Community:");

        jLabel4.setText("Choose City:");

        dropDownCity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dropDownCityItemStateChanged(evt);
            }
        });
        dropDownCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropDownCityActionPerformed(evt);
            }
        });

        dropDownCommunity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dropDownCommunityItemStateChanged(evt);
            }
        });
        dropDownCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropDownCommunityActionPerformed(evt);
            }
        });

        dropDownHospital.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dropDownHospitalItemStateChanged(evt);
            }
        });
        dropDownHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropDownHospitalActionPerformed(evt);
            }
        });

        jLabel6.setText("Choose Hospital:");

        jLabel7.setText("Choose Doctor:");

        dropDownDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropDownDoctorActionPerformed(evt);
            }
        });

        jLabel8.setText("Book Appointment");

        tblEncounterHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Date", "Description", "Severity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEncounterHistory);

        tblAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Date", "Doctor", "Hospital", "Community"
            }
        ));
        jScrollPane2.setViewportView(tblAppointment);

        jLabel5.setText("Encounter History");

        jLabel9.setText("Previous Appointments");

        createEmployeeLabel.setBackground(new java.awt.Color(153, 153, 153));
        createEmployeeLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        createEmployeeLabel.setForeground(new java.awt.Color(0, 71, 119));
        createEmployeeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        createEmployeeLabel.setText("PATIENT MAIN PAGE");
        createEmployeeLabel.setToolTipText("To create new employee");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 137, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnViewData, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnUpdateData, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblCity)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblFirstName)
                                            .addComponent(lblLastName)
                                            .addComponent(lblUsername)
                                            .addComponent(lblGender)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblAge)
                                                    .addComponent(lblMobileNo))))
                                        .addGap(29, 29, 29)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtGender, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                                            .addComponent(txtUsername)
                                            .addComponent(txtLastName)
                                            .addComponent(txtFirstName)
                                            .addComponent(txtMobileNo)
                                            .addComponent(txtAge)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lblCommunity)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                                        .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(69, 69, 69)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnBookAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dropDownHospital, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dropDownCity, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dropDownCommunity, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dropDownDoctor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8)
                                    .addComponent(dateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(313, 313, 313)
                                .addComponent(createEmployeeLabel)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(171, 171, 171))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(createEmployeeLabel))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnViewData, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFirstName)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addComponent(btnUpdateData, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel4)
                                            .addComponent(dropDownCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(dropDownCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(dropDownHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(dropDownDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(btnBookAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblLastName))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblUsername))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMobileNo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAge))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblGender)
                                    .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCommunity)
                                    .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCity))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(196, 196, 196))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void txtFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameActionPerformed

    private void txtMobileNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMobileNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMobileNoActionPerformed

    private void txtLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastNameActionPerformed

    private void txtGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGenderActionPerformed

    private void btnUpdateDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateDataActionPerformed
        // TODO add your handling code here:
        txtFirstName.setEditable(false);
        txtLastName.setEditable(false);
        p.setFirstName(txtFirstName.getText());
        p.setLastName(txtLastName.getText());
        p.setUserName(txtUsername.getText());
        p.setAge(Integer.parseInt(txtAge.getText()));
        p.setMobileNo(Integer.parseInt(txtMobileNo.getText()));
        p.setCommunity(txtCommunity.getText());
        p.setCity(txtCity.getText());
        JOptionPane.showMessageDialog(this, "Record Updated.");
                
    }//GEN-LAST:event_btnUpdateDataActionPerformed

    private void btnViewDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDataActionPerformed
        // TODO add your handling code here:
        txtFirstName.setVisible(true);
        txtFirstName.setEditable(false);
        txtLastName.setVisible(true);
        txtLastName.setEditable(false);
        txtUsername.setVisible(true);
//        txtPassword.setVisible(true);
        txtAge.setVisible(true);
        txtGender.setVisible(true);
        txtMobileNo.setVisible(true);
        txtCommunity.setVisible(true);
        txtCity.setVisible(true);
        
        lblCommunity.setVisible(true);
        lblCity.setVisible(true);
        lblFirstName.setVisible(true);
        lblLastName.setVisible(true);
        lblUsername.setVisible(true);
//        lblPassword.setVisible(true);
        lblAge.setVisible(true);
        lblGender.setVisible(true);
        lblMobileNo.setVisible(true);
             // Patient p = directory.getPatient();
        txtFirstName.setText(p.getFirstName());
        txtLastName.setText(p.getLastName());
        txtUsername.setText(p.getUserName());
        txtAge.setText(String.valueOf(p.getAge()));
        txtGender.setText(p.getGender());
        txtMobileNo.setText(String.valueOf(p.getMobileNo()));
        txtCommunity.setText(p.getCommunity());
        txtCity.setText(p.getCity());
        
    }//GEN-LAST:event_btnViewDataActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        PatientLoginJPanel patientLoginPanel = new PatientLoginJPanel(splitPanel, directory, cityDirectory, communityDirectory, hospitalDirectory, encounterHistory, bookAppointmentDirectory);
        splitPanel.setRightComponent(patientLoginPanel);
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnBookAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookAppointmentActionPerformed
        // TODO add your handling code here:
        int patientID = p.getPatientID();
        Date dateFromChooser = dateChooser.getDate();
        String date = String.format("%1$td-%1$tm-%1$tY", dateFromChooser);
        String city = String.valueOf(dropDownCity.getSelectedItem());
        String community = String.valueOf(dropDownCommunity.getSelectedItem());
        String hospital = String.valueOf(dropDownHospital.getSelectedItem());
        String doctor = String.valueOf(dropDownHospital.getSelectedItem());

        BookAppointment b = BookAppointmentDirectory.addNewAppointment();
        b.setPatientID(patientID);
        b.setDate(date);
        b.setCity(city);
        b.setCommunity(community);
        b.setHospitalName(hospital);
        b.setDate(date);
        JOptionPane.showMessageDialog(this, "New Appointment Booked.");
        populateTableAppointment();
    }//GEN-LAST:event_btnBookAppointmentActionPerformed

    private void dropDownCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropDownCityActionPerformed

     

if(dropDownCity.getSelectedItem().equals("Boston")){
            dropDownHospital.removeAllItems();
           dropDownHospital.addItem("Boston Medical Center");
            dropDownHospital.addItem("Brigham and Women's Hospital");
            dropDownHospital.addItem("Massachusetts General Hospital");
            
        }
        
        else{
            if(dropDownCity.getSelectedItem().equals("LA")){
               
                dropDownCommunity.removeAllItems();
                 dropDownHospital.removeAllItems();
                dropDownCommunity.addItem("Westland");
                dropDownCommunity.addItem("Bolyston");
                 dropDownHospital.addItem("Beth Israel Deaconess Hospital Infirmary");
                dropDownHospital.addItem("New England Baptist Hospital");
            }
            else if(dropDownCity.getSelectedItem().equals("Chicago")){
                dropDownCommunity.removeAllItems();
                dropDownHospital.removeAllItems();
                 dropDownCommunity.addItem("Jvue");
                dropDownCommunity.addItem("ParkDrive");
                dropDownHospital.addItem("Tufts Medical Center");
               dropDownHospital.addItem("Massachusetts General Hospital");
                
            }
            else{
                dropDownCommunity.removeAllItems();
                dropDownHospital.removeAllItems();
            }
        }
        
                                              
    }//GEN-LAST:event_dropDownCityActionPerformed

    private void dropDownCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropDownCommunityActionPerformed
        // TODO add your handling code here:
//        String community = String.valueOf(dropDownCommunity.getSelectedItem());
//        for(Hospital hospital : HospitalDirectory.getHospitalDirectory()) {
//            if(hospital.getCommunity().getCommunity().equals(community)){
//                dropDownHospital.addItem(hospital.getHospitalName());
//            }
//        }
    }//GEN-LAST:event_dropDownCommunityActionPerformed

    private void dropDownDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropDownDoctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dropDownDoctorActionPerformed

    private void dropDownHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropDownHospitalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dropDownHospitalActionPerformed

    private void dropDownCityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dropDownCityItemStateChanged
        // TODO add your handling code here:
        dropDownCommunity.removeAllItems();
        String city = String.valueOf(dropDownCity.getSelectedItem());
        
        for(Community community : CommunityDirectory.getCommunityDirectory()) {
            if(community.getCity().getCity().equals(city)){
                dropDownCommunity.addItem(community.getCommunity());
            }
        }
    }//GEN-LAST:event_dropDownCityItemStateChanged

    private void dropDownCommunityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dropDownCommunityItemStateChanged
        // TODO add your handling code here:
        String community = String.valueOf(dropDownCommunity.getSelectedItem());
        dropDownHospital.removeAllItems();
//        int itemCount = dropDownHospital.getItemCount();
//        for(int i = 0; i < itemCount; i++){
//          dropDownHospital.removeItemAt(0);
//        }
        
        for(Hospital hospital : HospitalDirectory.getHospitalDirectory()) {
            if(hospital.getCommunity().getCommunity().equals(community)){
                dropDownHospital.addItem(hospital.getHospitalName());
            }
        }
    }//GEN-LAST:event_dropDownCommunityItemStateChanged

    private void dropDownHospitalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dropDownHospitalItemStateChanged
        // TODO add your handling code here:
        String hospital = String.valueOf(dropDownHospital.getSelectedItem());
//        int itemCount = dropDownDoctor.getItemCount();
//        for(int i = 0; i < itemCount; i++){
//          dropDownDoctor.removeItemAt(0);
//        } 
        dropDownDoctor.removeAllItems();
        
        for(Doctor d : DoctorDirectory.getDoctorDirectory()) {
            if(d.getHospital().equals(hospital)) {
                dropDownDoctor.addItem(d.getFirstName());
            }
        }
    }//GEN-LAST:event_dropDownHospitalItemStateChanged

    private void txtMobileNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMobileNoKeyPressed
        // TODO add your handling code here:
        char var = evt.getKeyChar();
        if(Character.isLetter(var)){
            txtMobileNo.setEditable(false);
            JOptionPane.showMessageDialog(null, "Character not allowed");
            txtMobileNo.requestFocus();
            txtMobileNo.setEditable(true);
        }
        String phoneNo = txtMobileNo.getText();
        int length = phoneNo.length();
        if(length>9){
            txtMobileNo.setEditable(false);
        }
        if(evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE){
            txtMobileNo.setEditable(true);
        }
    }//GEN-LAST:event_txtMobileNoKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBookAppointment;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnUpdateData;
    private javax.swing.JButton btnViewData;
    private javax.swing.JLabel createEmployeeLabel;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JComboBox<String> dropDownCity;
    private javax.swing.JComboBox<String> dropDownCommunity;
    private javax.swing.JComboBox<String> dropDownDoctor;
    private javax.swing.JComboBox<String> dropDownHospital;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMobileNo;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTable tblAppointment;
    private javax.swing.JTable tblEncounterHistory;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCommunity;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMobileNo;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void populateTableEncounter() {
        DefaultTableModel model = (DefaultTableModel) tblEncounterHistory.getModel();
        model.setRowCount(0);
        
        for(Encounter e : EncounterHistory.getHistory()){
            Object[] row = new Object[3];
            row[0] = e.getDate();
            row[1] = e.getDesc();
            row[3] = e.getSeverity();
            model.addRow(row);
        }
    }

    private void populateTableAppointment() {
        DefaultTableModel model = (DefaultTableModel) tblAppointment.getModel();
        model.setRowCount(0);
        
        for(BookAppointment b: BookAppointmentDirectory.getBookAppointmentDirectory()){
            Object[] row = new Object[4];
            row[0] = b.getDate();
//            System.out.println(".............."+row[0]);
            row[1] = b.getDoctorName();
            row[2] = b.getHospitalName();
            row[3] = b.getCommunity();
            model.addRow(row);
            
        }
    }
}
