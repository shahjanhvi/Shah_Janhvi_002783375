/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.BookAppointment;
import model.BookAppointmentDirectory;
import model.CityDirectory;
import model.CommunityDirectory;
import model.DoctorDirectory;
import model.HospitalDirectory;
import model.Patient;
import model.PatientDirectory;
import model.PersonDirectory;

/**
 *
 * @author Janhvi Shah
 */
public class SystemPatientJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SystemPatientJPanel
     */
    JSplitPane splitPanel;
    PatientDirectory directory;
    DoctorDirectory doctorDirectory;
    HospitalDirectory hospitalDirectory;
    PersonDirectory personDirectory;
    CommunityDirectory communityDirectory;
    CityDirectory cityDirectory;
    public SystemPatientJPanel(JSplitPane splitPanel, PatientDirectory directory, DoctorDirectory doctorDirectory, 
            HospitalDirectory hospitalDirectory, CommunityDirectory communityDirectory, PersonDirectory personDirectory, CityDirectory cityDirectory) {
        initComponents();
        this.directory = directory;
        this.splitPanel = splitPanel;
        this.doctorDirectory = doctorDirectory;
        this.hospitalDirectory = hospitalDirectory;
        this.personDirectory = personDirectory;
        this.communityDirectory = communityDirectory;
        this.cityDirectory = cityDirectory;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatient = new javax.swing.JTable();
        btnViewPatient = new javax.swing.JButton();
        btnUpdatePatient = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblSearch = new javax.swing.JLabel();
        dropDownSearch = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        lblUsername = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        txtCommunity = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblMobileNo = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        txtMobileNo = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtGender = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtPatientID = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblAppointment = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        createEmployeeLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 153, 153));

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        tblPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "First Name", "Last Name", "Gender", "Community", "City"
            }
        ));
        jScrollPane1.setViewportView(tblPatient);

        btnViewPatient.setBackground(new java.awt.Color(0, 204, 255));
        btnViewPatient.setText("View Patient");
        btnViewPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientActionPerformed(evt);
            }
        });

        btnUpdatePatient.setBackground(new java.awt.Color(102, 255, 51));
        btnUpdatePatient.setText("Update Patient");
        btnUpdatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePatientActionPerformed(evt);
            }
        });
        btnUpdatePatient.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnUpdatePatientKeyPressed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 0, 51));
        btnDelete.setText("Delete Patient");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblSearch.setText("Search Patient by:");

        dropDownSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Patient ID", "First Name", "Community", "City" }));

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblUsername.setText("Username:");

        txtFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstNameActionPerformed(evt);
            }
        });

        lblAge.setText("Age:");

        lblGender.setText("Gender:");

        lblCommunity.setText("Community:");

        lblCity.setText("City:");

        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        lblLastName.setText("Last Name:");

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        lblMobileNo.setText("Mobile No:");

        lblFirstName.setText("First Name:");

        txtMobileNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMobileNoActionPerformed(evt);
            }
        });

        txtLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastNameActionPerformed(evt);
            }
        });

        jLabel1.setText("Patient ID:");

        tblAppointment.setBackground(new java.awt.Color(102, 153, 0));
        tblAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Date", "Doctor", "Hospital", "Community"
            }
        ));
        jScrollPane3.setViewportView(tblAppointment);

        jLabel3.setText("Appointment History");

        createEmployeeLabel.setBackground(new java.awt.Color(153, 153, 153));
        createEmployeeLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        createEmployeeLabel.setForeground(new java.awt.Color(0, 71, 119));
        createEmployeeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        createEmployeeLabel.setText("MANAGE PATIENT RECORD");
        createEmployeeLabel.setToolTipText("To create new employee");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 849, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnViewPatient)
                            .addGap(18, 18, 18)
                            .addComponent(btnUpdatePatient)
                            .addGap(18, 18, 18)
                            .addComponent(btnDelete))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblSearch)
                                    .addGap(18, 18, 18)
                                    .addComponent(dropDownSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnBack)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnLogOut)))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(createEmployeeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnSearch)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtPatientID))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblFirstName)
                                    .addGap(9, 9, 9)
                                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblLastName)
                                        .addComponent(lblUsername))
                                    .addGap(9, 9, 9)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtLastName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblAge)
                                                .addComponent(lblGender)
                                                .addComponent(lblMobileNo)
                                                .addComponent(lblCity))
                                            .addGap(9, 9, 9))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(lblCommunity)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtCommunity, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtMobileNo, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtAge, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtCity, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtGender, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addGap(197, 197, 197)))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnLogOut)
                    .addComponent(createEmployeeLabel))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearch)
                    .addComponent(dropDownSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewPatient)
                    .addComponent(btnUpdatePatient)
                    .addComponent(btnDelete))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(148, 148, 148)
                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGender)
                            .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMobileNo))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCommunity))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCity)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFirstName)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLastName)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUsername))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAge)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private boolean isDigit(String s) {
        char[] chArr = s.toCharArray();
        for(char c: chArr) {
            if(!Character.isDigit(c))
                return false;
        }
        return true;
    }
    private boolean isLetter(String text) {
        char[] chArr = text.toCharArray();
        for(char c: chArr) {
            if(!Character.isLetter(c))
                return false;
        }
        return true;
    }
    
    private void btnUpdatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePatientActionPerformed
        // TODO add your handling code here:
        
                // TODO add your handling code here:
        if(String.valueOf(txtMobileNo.getText()).equals("")){
            JOptionPane.showMessageDialog(this,"Please do not leave the Mobile no. field empty!");
            return;
        }
        if(!isDigit(txtMobileNo.getText())) {
            JOptionPane.showMessageDialog(this,"Please enter mobile number!");
            return;
        }
        if(String.valueOf(txtMobileNo.getText()).length() != 10) {
            JOptionPane.showMessageDialog(this,"Please enter a valid 10 DIGIT Mobile number!");
            return;
        }
        if(txtFirstName.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Please do not leave the First Name field empty!");
            return;
        }
        if(!isLetter(txtFirstName.getText())) {
            JOptionPane.showMessageDialog(this,"Please enter a valid Name!");
            return;
        } 
        if(txtLastName.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Please do not leave the Last Name field empty!");
            return;
        }
        if(!isLetter(txtFirstName.getText())) {
            JOptionPane.showMessageDialog(this,"Please enter a valid Name!");
            return;
        } 
        if(txtUsername.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Please do not leave the Username field empty!");
            return;
        }   
//        if(txtPassword.getText().equals("")){
//            JOptionPane.showMessageDialog(this,"Please do not leave the Password field empty!");
//            return;
//        }
        if(!isDigit(txtAge.getText())){
            JOptionPane.showMessageDialog(this,"Please enter Age number!");
            return;
        }
        
        
        int selectedRowIndex = tblPatient.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to View!");
            return;            

        }
        
        int patientID = Integer.parseInt(txtPatientID.getText());
        String firstName = txtFirstName.getText();
        String lastName = txtLastName.getText();
        String username = txtUsername.getText();
        int age = Integer.parseInt(txtAge.getText());
        String gender = txtGender.getText();
        Long mobileNo = Long.parseLong(txtMobileNo.getText());
        String community = txtCommunity.getText();
        String city = txtCity.getText();
        
        Patient p = directory.searchPatientByPatientID(patientID);
        p.setPatientID(patientID);
        p.setFirstName(firstName);
        p.setLastName(lastName);
        p.setUserName(username);
        p.setAge(age);
        p.setGender(gender);
        p.setMobileNo(mobileNo);
        p.setCommunity(community);
        p.setCity(city);
        
        JOptionPane.showMessageDialog(this, "Record Updated.");
        populateTable();
        
        txtPatientID.setText("");
        txtFirstName.setText("");
        txtLastName.setText("");
        txtUsername.setText("");
        txtAge.setText("");
        txtGender.setText("");
        txtMobileNo.setText("");
        txtCommunity.setText("");
        txtCity.setText("");
    }//GEN-LAST:event_btnUpdatePatientActionPerformed

    private void txtFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameActionPerformed

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtMobileNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMobileNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMobileNoActionPerformed
    
    
    private void txtLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastNameActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String parameter = dropDownSearch.getSelectedItem().toString();
        String value = txtSearch.getText();
        Patient p = directory.searchPatient(parameter, value);
        populateTable(p);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnViewPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPatient.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to View!");
            return;            
        }
        
        DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
        Patient p = (Patient)model.getValueAt(selectedRowIndex, 0);
        
        txtPatientID.setText(String.valueOf(p.getPatientID()));
        txtPatientID.setEditable(false);
        txtFirstName.setText(p.getFirstName());
        txtLastName.setText(p.getLastName());
        txtUsername.setText(p.getUserName());
        txtAge.setText(String.valueOf(p.getAge()));
        txtGender.setText(p.getGender());
        txtMobileNo.setText(String.valueOf(p.getMobileNo()));
        txtCommunity.setText(p.getCommunity());
        txtCity.setText(p.getCity());
        
        populateTableAppointment(p);
        
    }//GEN-LAST:event_btnViewPatientActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPatient.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to View!");
            return;            

        }
        
        DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
        Patient p = (Patient)model.getValueAt(selectedRowIndex, 0);
        
        directory.deletePatient(p);
        JOptionPane.showMessageDialog(this, "Patient record deleted!");
        populateTable();
        
        txtPatientID.setText("");
        txtFirstName.setText("");
        txtLastName.setText("");
        txtUsername.setText("");
        txtAge.setText("");
        txtGender.setText("");
        txtMobileNo.setText("");
        txtCommunity.setText("");
        txtCity.setText("");
        
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        MainSystemJPanel mainSystem = new MainSystemJPanel(splitPanel,directory, doctorDirectory, hospitalDirectory, communityDirectory, personDirectory, cityDirectory);
        splitPanel.setRightComponent(mainSystem);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        MainJFrame topFrame = (MainJFrame) SwingUtilities.getWindowAncestor(this);
        topFrame.loadDefaultState();
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnUpdatePatientKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnUpdatePatientKeyPressed
        // TODO add your handling code here:
        char var = evt.getKeyChar();
        if(Character.isLetter(var)){
            txtMobileNo.setEditable(false);
            JOptionPane.showMessageDialog(null, "Character not allowed");
            txtMobileNo.requestFocus();
            txtMobileNo.setEditable(true);
        }
        String phoneNo = txtMobileNo.getText();
        int length = phoneNo.length();
        if(length>9){
            txtMobileNo.setEditable(false);
        }
        if(evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE){
            txtMobileNo.setEditable(true);
        }
    }//GEN-LAST:event_btnUpdatePatientKeyPressed
    
    private void populateTable(Patient p){
        DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
        model.setRowCount(0);
        Object[] row = new Object[6];
            row[0] = p;
//            System.out.println(".............."+row[0]);
            row[1] = p.getFirstName();
            row[2] = p.getLastName();
            row[3] = p.getGender();
            row[4] = p.getCommunity();
            row[5] = p.getCity();

            model.addRow(row);
        
    }
    
    private void populateTable() {
//        throw new UnsupportedOperationException("Not supported yet.");
//        // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
//        
        DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
        model.setRowCount(0);
        
        for(Patient p : directory.getDirectory()){
            Object[] row = new Object[6];
            row[0] = p;
            System.out.println(".............."+row[0]);
            row[1] = p.getFirstName();
            row[2] = p.getLastName();
            row[3] = p.getGender();
            row[4] = p.getCommunity();
            row[5] = p.getCity();

            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdatePatient;
    private javax.swing.JButton btnViewPatient;
    private javax.swing.JLabel createEmployeeLabel;
    private javax.swing.JComboBox<String> dropDownSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMobileNo;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTable tblAppointment;
    private javax.swing.JTable tblPatient;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCommunity;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMobileNo;
    private javax.swing.JTextField txtPatientID;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void populateTableAppointment(Patient p) {
        DefaultTableModel model = (DefaultTableModel) tblAppointment.getModel();
        model.setRowCount(0);
        
        for(BookAppointment b: BookAppointmentDirectory.getBookAppointmentDirectory()){
            if(b.getPatientID() == p.getPatientID()){
                Object[] row = new Object[4];
                row[0] = b.getDate();
    //            System.out.println(".............."+row[0]);
                row[1] = b.getDoctorName();
                row[2] = b.getHospitalName();
                row[3] = b.getCommunity();
                model.addRow(row);
            }
        }

    }
}
