/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Community;
import model.CommunityHistory;
import model.Doctor;
import model.DoctorHistory;
import model.Encounter;
import model.EncounterHistory;
import model.House;
import model.HouseHistory;
import model.Patient;
import model.PatientHistory;
import model.VitalSigns;

/**
 *
 * @author Janhvi Shah
 */
public class PatientJPanel extends javax.swing.JPanel {
      private PatientHistory patientHistory;
    private DoctorHistory doctorHistory;
    private CommunityHistory communityHistory;
    private EncounterHistory encounterHistory;
    private HouseHistory houseHistory;
    
    private Patient currentPatient;
    private Doctor selectedDoctor;
    private ArrayList<Doctor> doctorList = new ArrayList<>();
    

    /**
     * Creates new form PatientJPanel
     */
    public PatientJPanel(PatientHistory patientHistory,DoctorHistory doctorHistory,CommunityHistory communityHistory,EncounterHistory encounterHistory,HouseHistory houseHistory,String username) {
        initComponents();
          this.patientHistory=patientHistory;
        this.doctorHistory=doctorHistory;
        this.communityHistory=communityHistory;
        this.encounterHistory=encounterHistory;
        this.houseHistory=houseHistory;
        
        this.currentPatient = patientHistory.search(username);

        for (Community c : communityHistory.getHistory()) {
            drpCommunityName.addItem(String.valueOf(c.getCommunityName()));
        }
        
        for(House h:houseHistory.getHistory()){
            drpHouse.addItem(String.valueOf(h.getStreetName()));
        }

        String name = currentPatient.getName();
        String pusername = currentPatient.getUserName();
        String password = currentPatient.getPassword();
        int age = currentPatient.getAge();
        String gender = currentPatient.getGender();
        long cellPhoneNumber = currentPatient.getPhoneNumber();
        String emailAddress = currentPatient.getEmailId();
        String disease = currentPatient.getDisease();
        House house = currentPatient.getHouse();

        txtName.setText(name);
        txtPhn.setText(String.valueOf(cellPhoneNumber));
        txtDisease.setText(disease);
        txtEmailId.setText(emailAddress);
        txtPassword.setText(password);
        txtUsername.setText(username);
        txtAge.setValue(age);
        drpGender.setSelectedItem(currentPatient.getGender());
        drpHouse.setSelectedItem(String.valueOf(house.getStreetName()));
        
        populateTable();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        patientTabs4 = new javax.swing.JTabbedPane();
        tabDoctor4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        drpCommunityName = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        drpDoctorName = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        btnBook = new javax.swing.JButton();
        jDate = new com.toedter.calendar.JDateChooser();
        tabEncounters = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEncountersPatient = new javax.swing.JTable();
        tabDetails = new javax.swing.JPanel();
        splitWorkspace = new javax.swing.JPanel();
        employeeId = new javax.swing.JLabel();
        Update = new javax.swing.JButton();
        txtAge = new javax.swing.JSpinner();
        txtName = new javax.swing.JTextField();
        name = new javax.swing.JLabel();
        gender = new javax.swing.JLabel();
        emailAddress = new javax.swing.JLabel();
        txtEmailId = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        createEmployeeLabel = new javax.swing.JLabel();
        txtPhn = new javax.swing.JTextField();
        drpGender = new javax.swing.JComboBox<>();
        age = new javax.swing.JLabel();
        cellPhoneNumber = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        employeeId1 = new javax.swing.JLabel();
        txtDisease = new javax.swing.JTextField();
        emailAddress1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        drpHouse = new javax.swing.JComboBox<>();

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Patient Dashbaord");

        patientTabs4.setBackground(new java.awt.Color(153, 153, 0));
        patientTabs4.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N

        jLabel10.setText("Select a community :");

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel11.setText("Step 1:");

        drpCommunityName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        drpCommunityName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpCommunityNameActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel12.setText("Step 2:");

        jLabel13.setText("Select a Doctor :");

        drpDoctorName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        drpDoctorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpDoctorNameActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel14.setText("Doctor Details");

        jLabel15.setText("Choose a date:");

        btnBook.setText("Book");
        btnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabDoctor4Layout = new javax.swing.GroupLayout(tabDoctor4);
        tabDoctor4.setLayout(tabDoctor4Layout);
        tabDoctor4Layout.setHorizontalGroup(
            tabDoctor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabDoctor4Layout.createSequentialGroup()
                .addGroup(tabDoctor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabDoctor4Layout.createSequentialGroup()
                        .addGap(268, 268, 268)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabDoctor4Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(tabDoctor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(tabDoctor4Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(53, 53, 53)
                                .addComponent(jLabel13))
                            .addGroup(tabDoctor4Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel10)))
                        .addGap(27, 27, 27)
                        .addGroup(tabDoctor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(drpCommunityName, 0, 279, Short.MAX_VALUE)
                            .addComponent(drpDoctorName, 0, 279, Short.MAX_VALUE)
                            .addComponent(jLabel14)))
                    .addGroup(tabDoctor4Layout.createSequentialGroup()
                        .addGap(364, 364, 364)
                        .addComponent(btnBook)))
                .addContainerGap(397, Short.MAX_VALUE))
        );
        tabDoctor4Layout.setVerticalGroup(
            tabDoctor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabDoctor4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(tabDoctor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel10)
                    .addComponent(drpCommunityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(tabDoctor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel13)
                    .addComponent(drpDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(39, 39, 39)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addGroup(tabDoctor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnBook)
                .addContainerGap(172, Short.MAX_VALUE))
        );

        patientTabs4.addTab("Doctors", tabDoctor4);

        tblEncountersPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Doctor Name", "Date", "Specilization", "Disease", "Heart Rate", "Weight", "Height"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEncountersPatient);

        javax.swing.GroupLayout tabEncountersLayout = new javax.swing.GroupLayout(tabEncounters);
        tabEncounters.setLayout(tabEncountersLayout);
        tabEncountersLayout.setHorizontalGroup(
            tabEncountersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabEncountersLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );
        tabEncountersLayout.setVerticalGroup(
            tabEncountersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabEncountersLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        patientTabs4.addTab("Encounters", tabEncounters);

        splitWorkspace.setBackground(new java.awt.Color(204, 204, 255));

        employeeId.setText("Username:");

        Update.setBackground(new java.awt.Color(255, 119, 0));
        Update.setForeground(new java.awt.Color(255, 255, 255));
        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        txtAge.setModel(new javax.swing.SpinnerNumberModel(18, 18, 60, 1));

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        name.setText("Name:");

        gender.setText("Gender:");

        emailAddress.setText("Email Address:");

        txtEmailId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailIdActionPerformed(evt);
            }
        });

        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        createEmployeeLabel.setBackground(new java.awt.Color(153, 153, 153));
        createEmployeeLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        createEmployeeLabel.setForeground(new java.awt.Color(0, 71, 119));
        createEmployeeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        createEmployeeLabel.setText("View/Edit Details");
        createEmployeeLabel.setToolTipText("To create new employee");

        txtPhn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhnActionPerformed(evt);
            }
        });

        drpGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others" }));

        age.setText("Age:");

        cellPhoneNumber.setText("Cell Phone Number:");

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        employeeId1.setText("Password:");

        txtDisease.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiseaseActionPerformed(evt);
            }
        });

        emailAddress1.setText("Disease:");

        jLabel9.setText("House:");

        javax.swing.GroupLayout splitWorkspaceLayout = new javax.swing.GroupLayout(splitWorkspace);
        splitWorkspace.setLayout(splitWorkspaceLayout);
        splitWorkspaceLayout.setHorizontalGroup(
            splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(splitWorkspaceLayout.createSequentialGroup()
                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(splitWorkspaceLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(splitWorkspaceLayout.createSequentialGroup()
                                .addComponent(emailAddress)
                                .addGap(18, 18, 18)
                                .addComponent(txtEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(splitWorkspaceLayout.createSequentialGroup()
                                .addComponent(cellPhoneNumber)
                                .addGap(18, 18, 18)
                                .addComponent(txtPhn, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(splitWorkspaceLayout.createSequentialGroup()
                                .addComponent(employeeId1)
                                .addGap(18, 18, 18)
                                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(splitWorkspaceLayout.createSequentialGroup()
                                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(emailAddress1))
                                .addGap(18, 18, 18)
                                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDisease, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(drpHouse, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(splitWorkspaceLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(splitWorkspaceLayout.createSequentialGroup()
                                .addComponent(age)
                                .addGap(18, 18, 18)
                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13))
                            .addGroup(splitWorkspaceLayout.createSequentialGroup()
                                .addComponent(gender)
                                .addGap(18, 18, 18)
                                .addComponent(drpGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(587, Short.MAX_VALUE))
            .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(splitWorkspaceLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(createEmployeeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(splitWorkspaceLayout.createSequentialGroup()
                            .addGap(80, 80, 80)
                            .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(name, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(employeeId, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGap(18, 18, 18)
                            .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 575, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        splitWorkspaceLayout.setVerticalGroup(
            splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(splitWorkspaceLayout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeId1)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(age)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gender)
                    .addComponent(drpGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cellPhoneNumber)
                    .addComponent(txtPhn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(emailAddress)
                    .addComponent(txtEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(emailAddress1)
                    .addComponent(txtDisease, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(drpHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(Update)
                .addContainerGap(75, Short.MAX_VALUE))
            .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(splitWorkspaceLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(createEmployeeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(name)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(employeeId)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(453, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout tabDetailsLayout = new javax.swing.GroupLayout(tabDetails);
        tabDetails.setLayout(tabDetailsLayout);
        tabDetailsLayout.setHorizontalGroup(
            tabDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 992, Short.MAX_VALUE)
            .addGroup(tabDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(splitWorkspace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tabDetailsLayout.setVerticalGroup(
            tabDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 461, Short.MAX_VALUE)
            .addGroup(tabDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(splitWorkspace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        patientTabs4.addTab("Details", tabDetails);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(patientTabs4, javax.swing.GroupLayout.PREFERRED_SIZE, 992, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(patientTabs4, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void drpCommunityNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpCommunityNameActionPerformed
        // TODO add your handling code here:
          drpDoctorName.removeAllItems();
        String communityName = (String) drpCommunityName.getSelectedItem();
        for(Doctor c:doctorHistory.getHistory()){
            if(c.getCommunity().getCommunityName().equals(communityName)){
                drpDoctorName.addItem(String.valueOf(c.getName()));
                this.selectedDoctor = c;
            }
            
        }
    }//GEN-LAST:event_drpCommunityNameActionPerformed

    private void drpDoctorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpDoctorNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drpDoctorNameActionPerformed

    private void btnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookActionPerformed
        // TODO add your handling code here:

        String communityName = (String) drpCommunityName.getSelectedItem();
        String doctorName = (String) drpDoctorName.getSelectedItem();
        Date jdate = jDate.getDate();

        Encounter encounter = new Encounter(jdate, new VitalSigns(), currentPatient, this.selectedDoctor);
        encounterHistory.add(encounter);

        JOptionPane.showMessageDialog(this,"Added a new Encounter for "+ this.selectedDoctor.getName()+" with "+currentPatient.getName());

    }//GEN-LAST:event_btnBookActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:

        //Reset validation
        //        valName.setText("");
        //        valEmployeeId.setText("");
        //        valDate.setText("");
        //        valTeamInfo.setText("");
        //        valCellPhoneNumber.setText("");
        //        valEmailAddress.setText("");
        //        valPhoto.setText("");
        //        if(validation()){
            String name = txtName.getText();
            String username = txtUsername.getText();
            String password = txtPassword.getText();
            int age = Integer.parseInt(txtAge.getValue().toString());
            String gender = (String) drpGender.getSelectedItem();
            long cellPhoneNumber = Long.parseLong(txtPhn.getText());
            String emailAddress = txtEmailId.getText();
            String disease = txtDisease.getText();
            House house = houseHistory.search(String.valueOf(drpHouse.getSelectedItem()));

            Patient p = new Patient(disease,house, name, age, gender, emailAddress, cellPhoneNumber, username, password);

            patientHistory.update(p);
            JOptionPane.showMessageDialog(this, " Patient Details was updated ! ");
            populateTable();
            //    }
    }//GEN-LAST:event_UpdateActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtEmailIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailIdActionPerformed

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void txtPhnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhnActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtDiseaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiseaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiseaseActionPerformed

 private void populateTable() {

        DefaultTableModel model = (DefaultTableModel) tblEncountersPatient.getModel();
        model.setRowCount(0);

        for (Encounter e : encounterHistory.searchByPatient(currentPatient.getUserName())) {
            Object row[] = new Object[10];
            row[0] = e.getDoctor().getName();
            DateFormat dateFormat = new SimpleDateFormat("yyyy-mm-dd");
            String strDate = dateFormat.format(e.getDate());
            row[1] = strDate;
            row[2] = e.getDoctor().getSpecialization();
            row[3] = e.getPatient().getDisease();
            row[4] = e.getVitalSigns().getHeartRate();
            row[5] = e.getVitalSigns().getWeight();
            row[6] = e.getVitalSigns().getHeight();

            model.addRow(row);

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Update;
    private javax.swing.JLabel age;
    private javax.swing.JButton btnBook;
    private javax.swing.JLabel cellPhoneNumber;
    private javax.swing.JLabel createEmployeeLabel;
    private javax.swing.JComboBox<String> drpCommunityName;
    private javax.swing.JComboBox<String> drpDoctorName;
    private javax.swing.JComboBox<String> drpGender;
    private javax.swing.JComboBox<String> drpHouse;
    private javax.swing.JLabel emailAddress;
    private javax.swing.JLabel emailAddress1;
    private javax.swing.JLabel employeeId;
    private javax.swing.JLabel employeeId1;
    private javax.swing.JLabel gender;
    private com.toedter.calendar.JDateChooser jDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel name;
    private javax.swing.JTabbedPane patientTabs4;
    private javax.swing.JPanel splitWorkspace;
    private javax.swing.JPanel tabDetails;
    private javax.swing.JPanel tabDoctor4;
    private javax.swing.JPanel tabEncounters;
    private javax.swing.JTable tblEncountersPatient;
    private javax.swing.JSpinner txtAge;
    private javax.swing.JTextField txtDisease;
    private javax.swing.JTextField txtEmailId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPhn;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
